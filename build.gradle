buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id "com.wynprice.cursemaven" version "2.1.5"
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_ver}-${phase}-${major}.${minor}.${patch}"
group = 'eutros.tetraits'
archivesBaseName = 'tetraits'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

configurations {
    shade
    implementation.extendsFrom(shade)
}

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.15.1'

    accessTransformer = new File('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tetraits {
                    source sourceSets.main
                }
                clojure {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tetraits {
                    source sourceSets.main
                }
                clojure {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tetraits', '--all', '--output', file('src/generated/resources/')

            mods {
                tetraits {
                    source sourceSets.main
                }
                clojure {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'Jared'
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "C4"
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_ver}-${forge_ver}"

    implementation fg.deobf("curse.maven:tetra:${tetra_file}") // please
    runtimeOnly fg.deobf("curse.maven:mgui:${mgui_file}")

    shade 'org.clojure:clojure:1.10.1'

    runtimeOnly fg.deobf('vazkii.botania:Botania:r1.15-388.458')
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${mc_ver}-1.2-35.186")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-${mc_ver}-2.0")

    runtimeOnly fg.deobf('vazkii.psi:Psi:r1.2-82.237')
    runtimeOnly fg.deobf('vazkii.autoreglib:AutoRegLib:1.5-41.80')
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    relocate 'clojure', "${project.group}.shade.clojure"
}

reobf {
    shadowJar {}
}

build.dependsOn shadowJar
build.dependsOn reobfShadowJar
